@page "/products"
@using ClientApp.Dto
@using ClientApp.Services
@attribute [StreamRendering]
@inject IProductService ProductService
@inject IOrderService OrderService
@inject OrderState OrderState
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Productos</PageTitle>

<div class="container mt-4">
    <h1 class="display-4 text-center mb-4">📦 Productos</h1>

    <p class="text-center text-muted">Listado actualizado de productos en stock.</p>

    @if (products == null)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3">Cargando productos...</p>
        </div>
    }
    else if (!products.Any())
    {
        <p class="text-center mt-4">No hay productos disponibles.</p>
    }
    else
    {
        <table class="table table-striped table-hover mt-4">
            <thead class="table-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th class="text-end">Precio</th>
                    <th class="text-center">Stock</th>
                    <th class="text-center">Cantidad</th>
                    <th class="text-start">Agregar</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in products)
                {
                    <tr>
                        <td>@product.Dto.Name</td>
                        <td>@product.Dto.Description</td>
                        <td class="text-end">$@product.Dto.Price.ToString("N2")</td>
                        <td class="text-center">@product.Dto.Stock</td>
                        <td class="text-center">@product.Counter</td>
                        <td>
                            <button class="btn btn-primary" @onclick="() => IncrementCounter(product)">Agregar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="d-flex justify-content-end mt-3">
            <button class="btn btn-success" @onclick="FinishOrder">Finalizar compra</button>
        </div>
    }
</div>

@code {
    private List<ProductItem>? products;

    protected override async Task OnInitializedAsync()
    {
        var dtoProducts = await ProductService.GetProductsAsync();
        products = dtoProducts.Select(p => new ProductItem(p)).ToList();
    }

    private void IncrementCounter(ProductItem product)
    {
        product.Counter++;
    }

    private async Task FinishOrder()
    {
        var selectedProducts = products!
            .Where(p => p.Counter > 0)
            .Select(p => new OrderProductDto
                {
                    ProductId = p.Dto.ProductId,
                    ProductName = p.Dto.Name,
                    UnitPrice = p.Dto.Price,
                    Quantity = p.Counter
                }).ToList();

        if (!selectedProducts.Any())
            return;

        OrderState.SetOrder(selectedProducts);
       

        foreach (var p in products)
            p.Counter = 0;

        Navigation.NavigateTo("/history");
    }

    private class ProductItem
    {
        public ProductsDto Dto { get; }
        public int Counter { get; set; }

        public ProductItem(ProductsDto dto)
        {
            Dto = dto;
            Counter = 0;
        }
    }
}
